{"version":3,"sources":["components/styled.js","components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GiftExpertApp.js","index.js"],"names":["InputBox","styled","input","AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","item","GiftExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAEaA,E,MAAWC,EAAOC,MAAV,gS,OCERC,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAQlB,SACI,cAACP,EAAD,CACIc,KAAK,OACLC,MAAOT,EACPU,SATS,SAACP,GAClBF,EAAcE,EAAEQ,OAAOF,QASfG,YAAY,6B,gCCvBfC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,8DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAChC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDHO,G,MAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAIrB,ECNwB,SAACA,GAEzB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAM,SAAAhB,GAAI,OAEPiB,YAAY,WACRH,EAAS,CACLf,KAAMC,EACNY,SAAS,MAEd,UAGb,CAACpB,IAIIqB,EDjBwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACI,6BAAKpB,IAEHoB,GAAY,mBAAGJ,UAAU,mCAAb,yBAEd,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAACkB,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAKhB,cEjBzBiB,EAAgB,WAEzB,MAAoC3C,mBAAS,CAAC,WAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAOA,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAEQ6C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCftC8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a6173a1a.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const InputBox = styled.input`\r\n    width: 100%;\r\n    height: 35px;\r\n    outline: none;\r\n    border: 2px solid #928fa7;\r\n    border-radius: 4px;\r\n    font-size: 12pt;\r\n    font-weight: bold;\r\n    padding: 2px 10px;\r\n    color: #1555ea;\r\n\r\n    ::placeholder {\r\n        color: #ab9cb4;\r\n    }\r\n`;","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { InputBox } from './styled'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {            \r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    const handleChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <InputBox \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleChange}\r\n                placeholder=\"Add a new category...\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=5&api_key=CLX1q3qRLYxaF5fNT2bNOxPJE5XNg8Za`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\nimport 'animate.css'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            \r\n            { loading  && <p className='animate__animated animate__flash'>Cargando...</p> }\r\n\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map((item) => (\r\n                        <GifGridItem \r\n                            key={item.id}\r\n                            {...item}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n                    \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then( gifs =>\r\n\r\n                setTimeout( () => {\r\n                    setState({\r\n                        data: gifs,\r\n                        loading: false\r\n                    })\r\n                }, 1000)\r\n            \r\n             )\r\n    },[category])\r\n\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './AddCategory'\r\nimport { GifGrid } from './GifGrid'\r\n\r\nexport const GiftExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['matrix']);\r\n\r\n    // const handleAdd = () => {\r\n    //     const rnd = Math.floor(Math.random() * 100);\r\n    //     setCategories( cat => [...cat, `val ${rnd}`]);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            {/* <hr /> */}\r\n            <ol>\r\n                { \r\n                    categories.map( category => (\r\n                        <GifGrid key={category} category={category} />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GiftExpertApp } from './components/GiftExpertApp'\n// import { Test } from './components/Test'\n\nReactDOM.render(\n  <React.StrictMode>\n    <GiftExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}